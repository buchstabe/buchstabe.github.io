<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | BUCHSTABE]]></title>
  <link href="http://buchstabe.gitlab.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://buchstabe.gitlab.io/"/>
  <updated>2017-08-21T18:39:57+02:00</updated>
  <id>http://buchstabe.gitlab.io/</id>
  <author>
    <name><![CDATA[Buchstabe Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rubinius 2.0]]></title>
    <link href="http://buchstabe.gitlab.io/blog/2013-10-11/rubinius-2-dot-0/"/>
    <updated>2013-10-11T12:57:00+02:00</updated>
    <id>http://buchstabe.gitlab.io/blog/2013-10-11/rubinius-2-dot-0</id>
    <content type="html"><![CDATA[<p>On October, 4th the Rubinius team announced the release of Rubinius 2.0. There are many exciting things to share. Look inside <a href="http://rubini.us/2013/10/04/rubinius-2-0-released/">Rubinius 2.0</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calling Java from JRuby]]></title>
    <link href="http://buchstabe.gitlab.io/blog/2013-10-02/calling-java-from-jruby/"/>
    <updated>2013-10-02T14:54:00+02:00</updated>
    <id>http://buchstabe.gitlab.io/blog/2013-10-02/calling-java-from-jruby</id>
    <content type="html"><![CDATA[<p>How to call Java from JRuby?</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Calling Java </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">java</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="n">java_import</span> <span class="n">my</span><span class="o">.</span><span class="n">package</span><span class="o">.</span><span class="n">CoolClass</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;obj1 = Java::CoolClass.new&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Packaging ruby applications for Debian based systems]]></title>
    <link href="http://buchstabe.gitlab.io/blog/2013-07-14/packaging-ruby-application-for-debian-based-systems/"/>
    <updated>2013-07-14T21:40:00+02:00</updated>
    <id>http://buchstabe.gitlab.io/blog/2013-07-14/packaging-ruby-application-for-debian-based-systems</id>
    <content type="html"><![CDATA[<p>Since I packaged my Ruby programs for the last time things changed a lot.</p>

<p>I&rsquo;m going to refresh my knowledge and collect some useful links in the first step:</p>

<ul>
<li><a href="https://wiki.debian.org/Ruby">https://wiki.debian.org/Ruby</a></li>
<li><a href="http://blog.brightbox.co.uk/posts/next-generation-ruby-packages-for-ubuntu">http://blog.brightbox.co.uk/posts/next-generation-ruby-packages-for-ubuntu</a></li>
<li><a href="https://wiki.debian.org/Diaspora/Packaging">https://wiki.debian.org/Diaspora/Packaging</a></li>
<li><a href="https://wiki.debian.org/Teams/Ruby/Packaging">https://wiki.debian.org/Teams/Ruby/Packaging</a></li>
<li><a href="http://developer.ubuntu.com/packaging/html">http://developer.ubuntu.com/packaging/html</a></li>
<li><a href="http://www.debian.org/doc/manuals/packaging-tutorial/packaging-tutorial.en.pdf">http://www.debian.org/doc/manuals/packaging-tutorial/packaging-tutorial.en.pdf</a></li>
<li><a href="http://www.lucas-nussbaum.net/blog/?p=681">http://www.lucas-nussbaum.net/blog/?p=681</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capistrano: deployment strategies]]></title>
    <link href="http://buchstabe.gitlab.io/blog/2013-07-05/capistrano-deployment-strategies/"/>
    <updated>2013-07-05T12:57:00+02:00</updated>
    <id>http://buchstabe.gitlab.io/blog/2013-07-05/capistrano-deployment-strategies</id>
    <content type="html"><![CDATA[<p><a href="http://www.capistranorb.com">Capistrano</a> is a  tool for remote server <em>automation</em> and <em>deployment</em>. We have to underline these two task as they will remain two different areas for a long time. Historicaly <em>Capistrano</em> was a deployment tool, but since then many server administration tools have been created for remote server administration. Software installation, package upgrade, data base management can be arranged using <em>Capistrano</em>.</p>

<p>Capistrano supports the idea of deployment strategies. Strictly speaking they are the way, how the source code goes to the remote machine. We can distinguish between <em>local</em> and <em>remote</em> strategies.</p>

<p>Local strategies have only one member, the <em>copy</em> strategy. Remote strategies split into <em>export</em>, <em>checkout</em> and <em>remote_cache</em> variants.</p>

<p>If you have a static site or do not want to use a SCM for deployment look at the following code snippet:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>A fragment from Capfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">set</span> <span class="ss">:repository</span><span class="p">,</span>  <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">/source_dir</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="c1"># This is our directory with the content to be deployed.</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:scm</span><span class="p">,</span> <span class="ss">:none</span> <span class="c1"># Do not use any SCM.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">www</span><span class="o">/</span><span class="n">mysite</span><span class="o">/</span><span class="n">htdocs</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="c1"># This is a place on the remote machine.</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_via</span><span class="p">,</span> <span class="ss">:copy</span> <span class="c1"># We are going to deploy using the copy strategy.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">set</span> <span class="ss">:copy_dir</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.</span><span class="n">/tmp</span><span class="o">/</span><span class="n">capistrano</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="c1"># Here we create a temporary archive with our content.</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:copy_remote_dir</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="c1">#{deploy_to}/tmp/capistrano&amp;rdquo; # There the archive will be copied.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You have to ensure that both local and remote directories for archives exist.</p>

<p>If you need some additional readings on <em>Capistrano</em>, try out the following:</p>

<ul>
<li><a href="http://www.capistranorb.com">Capistrano Home Page</a></li>
<li><a href="http://stackoverflow.com/questions/tagged/capistrano">stackoverflow questions on Capistrano</a></li>
<li><a href="https://github.com/capistrano/capistrano">Source Code</a></li>
<li><a href="https://github.com/capistrano/capistrano/wiki">Wiki</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capistrano deployment strategies: deploy via a copy]]></title>
    <link href="http://buchstabe.gitlab.io/blog/2013-02-24/capistrano-deployment-strategies-deploy-via-a-copy/"/>
    <updated>2013-02-24T18:39:00+01:00</updated>
    <id>http://buchstabe.gitlab.io/blog/2013-02-24/capistrano-deployment-strategies-deploy-via-a-copy</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/capistrano/capistrano">Capistrano</a> presents a very
convinient way to manage your remotely deployed applications and
websites. It has initially been developed for Rails deployment. But it
also can be very useful for static site deployment.</p>

<!-- more -->


<p>I&rsquo;ve been using Capistrano for a couples of months, but I have still
some question open. Everything seems to be simple and clear if you
grasp main ideas behind the deployment.</p>

<p>One of the buzzing topics is how the source code of your applications
gets onto the remote machine. There are two ways for that. The source
code can be either uploaded from your local machine, where the
Capistrano deployment script is executed, or the remote server
(dedicated for the deployment) can fetch the code from an scm
repository which should be accessible remotely in this case.</p>

<p>Capistrano supports the idea of deployment strategies. Strictly
speaking they are the way, how the source code goes to the remote
machine. We can distinguish between <strong>local</strong> and
<strong>remote</strong> strategies.</p>

<p>Local strategies have only one representant, the <strong>copy</strong>
strategy. Remote strategies split into <strong>export</strong>,
<strong>checkout</strong> and <strong>remote_cache</strong> variants.</p>

<p>The above text means: if you&rsquo;re using a local scm repository which
cannot be accessed from the remote machine, you can use only the copy
strategy. In that case you use the code:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;set :deploy_via, :copy</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>For more details consider to read the Capistrano source code:
<a href="https://github.com/capistrano/capistrano/tree/master/lib/capistrano/recipes/deploy/strategy">https://github.com/capistrano/capistrano/tree/master/lib/capistrano/recipes/deploy/strategy</a></p>

<p>You may be also interested in this article about deployment of static
files:
<a href="http://f3internet.com/articles/2010/06/18/deploying-static-sites-with-capistrano/">http://f3internet.com/articles/2010/06/18/deploying-static-sites-with-capistrano/</a></p>
]]></content>
  </entry>
  
</feed>
