<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.2">Jekyll</generator><link href="https://bu.chsta.be/feed.xml" rel="self" type="application/atom+xml" /><link href="https://bu.chsta.be/" rel="alternate" type="text/html" /><updated>2018-03-07T14:50:11+01:00</updated><id>https://bu.chsta.be/</id><title type="html">Data Processing Lab Notebook</title><subtitle>Frontiers of Data Processing, Language Engineering and Machine Learning in Ruby.
</subtitle><author><name>Andrei Beliankou</name></author><entry><title type="html">Coffee Break #7</title><link href="https://bu.chsta.be/notebook/2018/03/coffee-break-number-7.html" rel="alternate" type="text/html" title="Coffee Break #7" /><published>2018-03-07T14:34:35+01:00</published><updated>2018-03-07T14:46:52+01:00</updated><id>https://bu.chsta.be/notebook/2018/03/coffee-break-number-7</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/03/coffee-break-number-7.html">&lt;h1 id=&quot;coffee-break-7&quot;&gt;Coffee Break #7&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pawelurbanek.com/2018/02/16/seo-tips-for-technical-bloggers-and-programming-blogs-in-2018/&quot;&gt;https://pawelurbanek.com/2018/02/16/seo-tips-for-technical-bloggers-and-programming-blogs-in-2018/&lt;/a&gt; — More visibility for technical writers.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bbatsov/prelude#cheatsheet&quot;&gt;https://github.com/bbatsov/prelude#cheatsheet&lt;/a&gt; — Prelude Cheatsheet for Emacs users.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@tom.suffern.wright/better-battery-life-on-ubuntu-17-10-4588b7f72def&quot;&gt;https://medium.com/@tom.suffern.wright/better-battery-life-on-ubuntu-17-10-4588b7f72def&lt;/a&gt; — Tuning an Ubuntu Installation on Dell XPS 15.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Break #7</summary></entry><entry><title type="html">Coffee Break #6</title><link href="https://bu.chsta.be/notebook/2018/03/coffee-break-number-6.html" rel="alternate" type="text/html" title="Coffee Break #6" /><published>2018-03-06T09:59:15+01:00</published><updated>2018-03-06T10:07:55+01:00</updated><id>https://bu.chsta.be/notebook/2018/03/coffee-break-number-6</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/03/coffee-break-number-6.html">&lt;h1 id=&quot;coffee-break-6&quot;&gt;Coffee Break #6&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@k0kubun/the-method-jit-compiler-for-ruby-2-6-388ee0989c13&quot;&gt;https://medium.com/@k0kubun/the-method-jit-compiler-for-ruby-2-6-388ee0989c13&lt;/a&gt; — Ruby’s JIT by the creator.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vaneyckt.io/posts/ruby_concurrency_building_a_timeout_queue/&quot;&gt;https://vaneyckt.io/posts/ruby_concurrency_building_a_timeout_queue/&lt;/a&gt; — Datastructures in Ruby and more.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruby-toolbox.com/blog/2018-02-01/lets-push-things-forward&quot;&gt;https://www.ruby-toolbox.com/blog/2018-02-01/lets-push-things-forward&lt;/a&gt; — Ruby Toolbox Revival.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Break #6</summary></entry><entry><title type="html">Coffee Break #5</title><link href="https://bu.chsta.be/notebook/2018/03/coffee-break-number-5.html" rel="alternate" type="text/html" title="Coffee Break #5" /><published>2018-03-05T20:42:22+01:00</published><updated>2018-03-05T21:00:07+01:00</updated><id>https://bu.chsta.be/notebook/2018/03/coffee-break-number-5</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/03/coffee-break-number-5.html">&lt;h1 id=&quot;coffee-break-5&quot;&gt;Coffee Break #5&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.virtuouscode.com/2015/08/11/what-its-like-to-come-back-to-a-ruby-project-after-6-months/&quot;&gt;http://www.virtuouscode.com/2015/08/11/what-its-like-to-come-back-to-a-ruby-project-after-6-months/&lt;/a&gt; — Pain of the Ruby Development (not really).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/dont-fear-the-rebase-bca683888dae&quot;&gt;https://hackernoon.com/dont-fear-the-rebase-bca683888dae&lt;/a&gt; — Don’t fear the Git rebase.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.skybert.net/craftsmanship/things-id-like-to-tell-the-younger-me/&quot;&gt;http://www.skybert.net/craftsmanship/things-id-like-to-tell-the-younger-me/&lt;/a&gt; — Experiences for the younger me.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Break #5</summary></entry><entry><title type="html">Coffee Break #4</title><link href="https://bu.chsta.be/notebook/2018/03/coffee-break-number-4.html" rel="alternate" type="text/html" title="Coffee Break #4" /><published>2018-03-02T12:39:17+01:00</published><updated>2018-03-02T12:55:00+01:00</updated><id>https://bu.chsta.be/notebook/2018/03/coffee-break-number-4</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/03/coffee-break-number-4.html">&lt;h1 id=&quot;coffee-break-4&quot;&gt;Coffee Break #4&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mopemope/meghanada-emacs&quot;&gt;https://github.com/mopemope/meghanada-emacs&lt;/a&gt; — New promising minor mode for Java development with Emacs.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/aix/library/au-unixtext/index.html&quot;&gt;https://www.ibm.com/developerworks/aix/library/au-unixtext/index.html&lt;/a&gt; — Using Core Utils for many text manipulation tasks.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://matthias-endler.de/2017/yes/&quot;&gt;https://matthias-endler.de/2017/yes/&lt;/a&gt; — How to rewrite a standard Unix tool for fun and profit.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Break #4</summary></entry><entry><title type="html">Coffee Break #3</title><link href="https://bu.chsta.be/notebook/2018/03/coffee-break-number-3.html" rel="alternate" type="text/html" title="Coffee Break #3" /><published>2018-03-01T13:48:51+01:00</published><updated>2018-03-01T14:03:42+01:00</updated><id>https://bu.chsta.be/notebook/2018/03/coffee-break-number-3</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/03/coffee-break-number-3.html">&lt;h1 id=&quot;coffee-break-3&quot;&gt;Coffee Break #3&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/drduh/YubiKey-Guide#creating-keys&quot;&gt;https://github.com/drduh/YubiKey-Guide#creating-keys&lt;/a&gt; - How to set up you GPG Smart Card with YubiKey.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.atlassian.com/blog/2015/03/emacs-intellij/&quot;&gt;https://developer.atlassian.com/blog/2015/03/emacs-intellij/&lt;/a&gt; - Getting IntelliJ IDEA and Emacs play together.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/database/etl-job-orchestration-with-matillion-amazon-dynamodb-and-aws-lambda/&quot;&gt;https://aws.amazon.com/blogs/database/etl-job-orchestration-with-matillion-amazon-dynamodb-and-aws-lambda/&lt;/a&gt; - Serverless ETL Pipelines on AWS.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Break #3</summary></entry><entry><title type="html">Coffee Break #2</title><link href="https://bu.chsta.be/notebook/2018/02/coffee-break-number-2.html" rel="alternate" type="text/html" title="Coffee Break #2" /><published>2018-02-28T12:56:36+01:00</published><updated>2018-02-28T13:14:07+01:00</updated><id>https://bu.chsta.be/notebook/2018/02/coffee-break-number-2</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/02/coffee-break-number-2.html">&lt;h1 id=&quot;coffee-break-2&quot;&gt;Coffee Break #2&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://gafur.me/2018/02/05/analysing-datasets-with-daru-library.html&quot;&gt;http://gafur.me/2018/02/05/analysing-datasets-with-daru-library.html&lt;/a&gt; - Introductory tutorial on Data Analysis with Daru.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sethrobertson.github.io/GitFixUm/fixup.html&quot;&gt;https://sethrobertson.github.io/GitFixUm/fixup.html&lt;/a&gt; - Git strategies in case if everything went wrong.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sqlitetutorial.net/sqlite-import-csv&quot;&gt;http://www.sqlitetutorial.net/sqlite-import-csv&lt;/a&gt; - Getting SQL power with zero effort for your CSV files.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Break #2</summary></entry><entry><title type="html">Coffee Break #1</title><link href="https://bu.chsta.be/notebook/2018/02/coffee-break-number-1.html" rel="alternate" type="text/html" title="Coffee Break #1" /><published>2018-02-27T18:46:11+01:00</published><updated>2018-02-27T19:07:43+01:00</updated><id>https://bu.chsta.be/notebook/2018/02/coffee-break-number-1</id><content type="html" xml:base="https://bu.chsta.be/notebook/2018/02/coffee-break-number-1.html">&lt;h1 id=&quot;coffee-brake-1&quot;&gt;Coffee Brake #1&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/blog/2506-slack-and-github-your-ultimate-productivity-pair&quot;&gt;https://github.com/blog/2506-slack-and-github-your-ultimate-productivity-pair&lt;/a&gt; - On pairing Slack and Github (and why it’s so cool).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gradle/gradle-completion&quot;&gt;https://github.com/gradle/gradle-completion&lt;/a&gt; - Official Gradle CMD complition scripts for Bash and Zsh.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.virtuouscode.com/2017/01/11/advice-to-myself-8-years-ago&quot;&gt;http://www.virtuouscode.com/2017/01/11/advice-to-myself-8-years-ago&lt;/a&gt; - How to spend a decade of your life wisely.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Coffee Brake #1</summary></entry><entry><title type="html">Non web tasks in Ruby</title><link href="https://bu.chsta.be/notebook/2017/06/non-web-tasks-in-ruby.html" rel="alternate" type="text/html" title="Non web tasks in Ruby" /><published>2017-06-11T22:53:19+02:00</published><updated>2018-02-27T19:08:59+01:00</updated><id>https://bu.chsta.be/notebook/2017/06/non-web-tasks-in-ruby</id><content type="html" xml:base="https://bu.chsta.be/notebook/2017/06/non-web-tasks-in-ruby.html">&lt;p&gt;Ruby is a very capable language. Do NLP, Machine Learning and Data Science in Ruby:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/arbox/data-science-with-ruby&quot;&gt;https://github.com/arbox/data-science-with-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/arbox/nlp-with-ruby&quot;&gt;https://github.com/arbox/nlp-with-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/arbox/machine-learning-with-ruby&quot;&gt;https://github.com/arbox/machine-learning-with-ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">Ruby is a very capable language. Do NLP, Machine Learning and Data Science in Ruby:</summary></entry><entry><title type="html">Online Dictionaries</title><link href="https://bu.chsta.be/notebook/2014/02/online-dictionaries.html" rel="alternate" type="text/html" title="Online Dictionaries" /><published>2014-02-28T16:45:02+01:00</published><updated>2018-02-27T19:08:59+01:00</updated><id>https://bu.chsta.be/notebook/2014/02/online-dictionaries</id><content type="html" xml:base="https://bu.chsta.be/notebook/2014/02/online-dictionaries.html">&lt;p&gt;A couple of useful links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://de.pons.com/&quot;&gt;http://de.pons.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.merriam-webster.com/&quot;&gt;http://www.merriam-webster.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.collinsdictionary.com/&quot;&gt;http://www.collinsdictionary.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oxforddictionaries.com/&quot;&gt;http://www.oxforddictionaries.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oed.com/&quot;&gt;http://www.oed.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dictionary.cambridge.org/&quot;&gt;http://dictionary.cambridge.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.duden.de/&quot;&gt;http://www.duden.de/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">A couple of useful links:</summary></entry><entry><title type="html">Customizing Emacs</title><link href="https://bu.chsta.be/notebook/2014/02/customizing-emacs.html" rel="alternate" type="text/html" title="Customizing Emacs" /><published>2014-02-20T14:41:30+01:00</published><updated>2018-02-27T19:08:59+01:00</updated><id>https://bu.chsta.be/notebook/2014/02/customizing-emacs</id><content type="html" xml:base="https://bu.chsta.be/notebook/2014/02/customizing-emacs.html">&lt;p&gt;I’ve tried many ways to build a clean testing environment for Emacs editor on my
Ubuntu machine. One previous attempt showed a possible way to do so:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;emacs &lt;span class=&quot;nt&quot;&gt;-Q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; some_startup_script.el
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But this solution doesn’t show the real state of affairs when we load all the configuration files in Emacs. The &lt;code&gt;.emacs&lt;/code&gt; file is loaded in the middle of the Emacs initialization, not at the end. See for details &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Startup-Summary.html#Startup-Summary&quot;&gt;39.1.1 Summary: Sequence of Actions at Startup&lt;/a&gt;. One possible problem is that &lt;code&gt;package.el&lt;/code&gt; loads its configuration before you’ve done custom changes.&lt;/p&gt;

&lt;p&gt;For now I consider a better way starting Emacs from another user:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;emacs &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; emacstestuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All customizations can be done in the &lt;code&gt;.emacs.d&lt;/code&gt; directory from &lt;code&gt;emacstestuser&lt;/code&gt;.
The only thing you need is changing of user specific variables:&lt;/p&gt;

&lt;div class=&quot;language-emacs-lisp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;user-emacs-directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/home/emacstestuser/.emacs.d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Andrei Beliankou</name></author><summary type="html">I’ve tried many ways to build a clean testing environment for Emacs editor on my Ubuntu machine. One previous attempt showed a possible way to do so:</summary></entry></feed>